<!--
/**
 * VisualForce page that performs a 'URL Hack' from a List Button.
 * @page ltng_URLHackListButton
 */
-->
<!--
 //-- CHANGE: set the standardController
 //-- replace NEW_OBJECT_API_NAME__c with the API Name of SObject the new record should be (ex: Opportunity, or ChildObject__c)
 //-- (if another apex class was used instead of ltng_UrlHackListButtonCtrl)
        replace the extensions value with the name of your new class.
-->        
<apex:page standardController="ltng_URLHackChild__c" extensions="ltng_UrlHackListButtonCtrl"
    recordSetVar="customChildren"
    standardStylesheets="false" showHeader="false" sidebar="false"
    applyHtmlTag="false" applyBodyTag="false" docType="html-5.0"
>
    <!-- <apex:includeLightning /> -->
    
    <!-- include Lightning Design System for style parity -->
    <apex:slds />
    
    <div class="slds-scope">
        
        <!--
        example spinner if desired
        <div role="status" class="slds-spinner slds-spinner_medium">
            <span class="slds-assistive-text">Loading</span>
            <div class="slds-spinner__dot-a"></div>
            <div class="slds-spinner__dot-b"></div>
        </div>
        -->
        
        <!--
        There is no current callback on CANCEL, but redirection does work on success.
		
        However, sforce.one supports redirection back to the original page.
        
        Please see here for more detail:
        https://developer.salesforce.com/docs/atlas.en-us.salesforce1.meta/salesforce1/salesforce1_dev_jsapi_sforce_one.htm
        -->
        <button class='slds-button slds-button--neutral slds-button--brand'
            onclick='javascript:sforce.one.back();false;'
        >
            Back
        </button>
    </div>
    
    <script>
        //-- safely perform window load handling
        var previousOnload = window.onload;
        window.onload = function() {
            if (previousOnload) { previousOnload(); }
            
            console.info('about to create a record');

            //-- determine values to provide for default values
            var resultStr = "{! JSENCODE(serializedDefaultValues) }";
            var resultValue = JSON.parse(resultStr);

            //--	-	-	-	-	-	-	-	-	-	-	-
            //-- UPDATE THE LINES BELOW
            //--	-	-	-	-	-	-	-	-	-	-	-

            //-- @CHANGE: get the values to use for default
            //-- replace NEW_SOBJECT_API_NAME__c with the API Name of the type of object to create (ex: Account, CustomObject__c)
            //-- add in any other values to use for defaults

            //-- get the default values
            var newObjectApiName = 'ltng_URLHackChild__c';
            var recordTypeId = resultValue.recordTypeId;
            var baseRecordId = resultValue.baseInfo.Id;
            var childName = resultValue.baseInfo.Name + ' Child';
            var childDescription = resultValue.baseInfo.CustomDescription__c;
            var childCheckbox = resultValue.baseInfo.SampleCheckbox__c;
            var childDate = resultValue.baseInfo.SampleDate__c;
            var childNumber = resultValue.baseInfo.SampleNumber__c;
            var childPicklist = resultValue.baseInfo.SamplePicklist__c;
            var createdByUserLastName = resultValue.currentUserLastName;
            var customSettingValue = resultValue.customMetadataInfo.MetadataValue__c;
            var customMetadataValue = resultValue.customSettingInfo.CustomSettingValue__c;

            //-- @CHANGE: set those default values to the Field API Names
            
            var defaultObject = {
                'URLHackBase__c': baseRecordId,
                'Name': childName,
                'CustomDescription__c': childDescription,
                'SampleCheckbox__c': childCheckbox,
                'SampleDate__c': childDate,
                'SampleNumber__c': childNumber,
				'SamplePicklist__c': childPicklist,
                'CreatedByUserLastName__c': createdByUserLastName,
                'CustomSettingValue__c': customSettingValue,
                'CustomMetadataValue__c': customMetadataValue
            };
            
            //--	-	-	-	-	-	-	-	-	-	-	-
            //-- UPDATE THE LINES ABOVE
            //--	-	-	-	-	-	-	-	-	-	-	-
            
            //-- the following line uses this format:
            //-- sforce.one.createRecord( sObjectName, recordTypeId, objectWithDefaultPropertyValues );
    		//-- see here for more information
            //-- https://developer.salesforce.com/docs/atlas.en-us.salesforce1.meta/salesforce1/salesforce1_dev_jsapi_sforce_one.htm
            
            sforce.one.createRecord(newObjectApiName, recordTypeId, defaultObject );
        }
    </script>
</apex:page>